!function(){"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class t{constructor(t,n){let{item:s,handleCardClick:o}=t;e(this,"_handleLikeButton",(()=>{this._likeButton.classList.toggle("card__like-button_black")})),e(this,"_handleDeleteButton",(()=>{this._element.remove(),this._element=null})),this._cardSelector=n,this._name=s.name,this._link=s.link,this._handleCardClick=o}_getTemplate(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._element}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeButton),this._deleteButton.addEventListener("click",this._handleDeleteButton),this._cardImage.addEventListener("click",this._handleCardClick)}generateCard(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._element.querySelector(".card__name").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._element}}class n{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_hasValidInputs(){return this._inputList.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButton(){this._hasValidInputs()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),e.value="",this._toggleButton()}))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class o{constructor(e){s(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),s(this,"_handleMouseDown",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close"))&&this.close()})),this._popupElement=e}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleMouseDown)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleMouseDown)}}class i extends o{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popupElement.querySelector(".popup__form"),this._inputList=this._form.querySelectorAll(".popup__input")}getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._form.reset()}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(),this.close()}))}}const r=document.querySelector(".popup_type_profile"),l=document.querySelector(".profile__popup-button"),a=(document.querySelector(".popup__close_type_profile"),document.querySelector(".popup_type_place")),u=document.querySelector(".profile__add-button"),c=(document.querySelector(".popup__close_type_place"),document.querySelector(".profile__name")),p=document.querySelector(".profile__job"),_=document.querySelector(".popup__form_type_profile"),d=_.elements.name,h=_.elements.job,m=(a.querySelector(".popup__input_field_heading"),a.querySelector(".popup__input_field_img"),document.querySelector(".popup__form_type_place")),y=(document.querySelector("#card-template").content,document.querySelector(".cards")),b=document.querySelector(".popup_type_preview"),E=(document.querySelector(".popup__close_type_preview"),document.querySelector(".popup__image"),document.querySelector(".popup__heading"),document.querySelectorAll(".popup"),{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",imagePreview:".popup_type_preview"}),v=new class{constructor(e,t){this._name=e,this._job=t}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){this._name.textContent=e.name,this._job.textContent=e.job}}(c,p),S=new i(r,(function(){v.setUserInfo(S.getInputValues())}));S.setEventListeners();const g=new n(E,_);g.enableValidation(),l.addEventListener("click",(()=>{g.resetValidation();const e=v.getUserInfo();d.value=e.name,h.value=e.job,S.open()}));const f=new i(a,(function(){const e=f.getInputValues(),t={name:e.placeHeading,link:e.placeImage};y.prepend(C({item:t})),m.reset()}));f.setEventListeners();const L=new class{constructor(e,t){let{items:n,renderer:s}=e;this._renderer=s,this._container=document.querySelector(t),this._items=n}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{L.addItem(C({item:e}))}},".cards");L.renderItems();const k=new n(E,m);function C(e){let{item:n}=e;return new t({item:n,handleCardClick:()=>{q.open({item:n})}},".card-template").generateCard()}k.enableValidation(),u.addEventListener("click",(()=>{k.resetValidation(),f.open()}));const q=new class extends o{constructor(e){super(e),this._image=this._popupElement.querySelector(".popup__image"),this._caption=this._popupElement.querySelector(".popup__heading")}open(e){let{item:t}=e;this._image.src=t.link,this._image.alt="".concat(t.name," photo"),this._caption.textContent=t.name,super.open()}}(b)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,