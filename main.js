!function(){"use strict";class e{constructor(e,t,s){let{item:r,handleCardClick:n,handleDeleteButton:o,handleLikeButton:i}=e;var a,c;c=e=>{this._likes=e,this._renderLikes()},(a="handleLike")in this?Object.defineProperty(this,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):this[a]=c,this._cardSelector=t,this._item=r,this._name=r.name,this._link=r.link,this._likes=r.likes,this._ownerId=r.owner._id,this._handleCardClick=n,this._handleDeleteButton=o,this._handleLikeButton=i,this._id=r._id,this._userId=s}_getTemplate(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._element}_crossId(e){this._ownerId!==e._id&&(this._binButton.style.display="none")}checkForLikes(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._likeCounter.textContent=this._likes.length,this.checkForLikes()?this._likeButton.classList.add("card__like-button_black"):this._likeButton.classList.remove("card__like-button_black")}deleteCard(e){this._element.remove(),this._element=null}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeButton(this._id))),this._cardImage.addEventListener("click",this._handleCardClick),this._binButton.addEventListener("click",(()=>{this._handleDeleteButton(this._id)}))}generateCard(e){return this._element=this._getTemplate(),this._element.id=this._id,this._likeButton=this._element.querySelector(".card__like-button"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._binButton=this._element.querySelector(".card__delete-button"),this._deleteButton=document.querySelector(".popup__button_type_delete"),this._cardImage=this._element.querySelector(".card__image"),this._element.querySelector(".card__name").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._crossId(e),this._renderLikes(),this._setEventListeners(),this._element}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_hasValidInputs(){return this._inputList.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_toggleButton(){this._hasValidInputs()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButton()}))}))}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),e.value="",this._toggleButton()}))}enableValidation(){this._form.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e){s(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),s(this,"_handleMouseDown",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close"))&&this.close()})),this._popupElement=e}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleMouseDown)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleMouseDown)}}class n extends r{constructor(e,t,s){super(e),this._handleSubmit=t,this._form=this._popupElement.querySelector(".popup__form"),this._inputList=this._form.querySelectorAll(".popup__input"),this._button=this._form.querySelector(".popup__button"),this._buttonText=s}saving(){this._button.textContent="saving..."}hideSaving(){this._button.textContent=this._buttonText}getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}close(){super.close(),this._form.reset()}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}}const o=document.querySelector(".popup_type_profile"),i=document.querySelector(".profile__popup-button"),a=(document.querySelector(".popup__close_type_profile"),document.querySelector(".popup_type_avatar")),c=document.querySelector(".popup__form_type_avatar"),l=document.querySelector(".profile__avatar"),u=document.querySelector(".profile__avatar-box"),_=document.querySelector(".profile__name"),h=document.querySelector(".profile__job"),d=document.querySelector(".popup__form_type_profile"),p=d.elements.name,m=d.elements.about,v=(document.querySelector(".popup__form_type_avatar"),document.querySelector(".card__like-counter"),document.querySelector(".popup_type_place")),y=document.querySelector(".profile__add-button"),b=(document.querySelector(".popup__close_type_place"),v.querySelector(".popup__input_field_heading"),v.querySelector(".popup__input_field_img"),document.querySelector(".popup__form_type_place"),c.querySelector(".popup__input_field_img")),f=(document.querySelector("#card-template").content,document.querySelector(".cards"),document.querySelector(".popup_type_preview")),S=(document.querySelector(".popup__close_type_preview"),document.querySelector(".popup__image"),document.querySelector(".popup__heading"),document.querySelector(".popup_type_delete")),E={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible",imagePreview:".popup_type_preview"};document.querySelectorAll(".popup");const g=new class{constructor(e){let{baseUrl:t,headers:s}=e;var r,n;n=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))),(r="_customFetch")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._baseUrl=t,this._headers=s}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}setUserInfo(e){let{name:t,about:s}=e;return this._customFetch("".concat(this._baseUrl,"/users/me "),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:t,about:s})})}setUserAvatar(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})})}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}createCard(e){return this._customFetch("".concat(this._baseUrl,"/cards "),{headers:this._headers,method:"POST",body:JSON.stringify(e)})}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e," "),{headers:this._headers,method:"DELETE"})}likeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"PUT"})}unlikeCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{headers:this._headers,method:"DELETE"})}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"ad179248-85aa-46f0-9788-27fa8afcb4c4","Content-Type":"application/json"}});let k,C={};Promise.all([g.getUserInfo(),g.getInitialCards()]).then((e=>{let[t,s]=e;return C=t,k=t._id,w.renderItems(s.reverse()),q.setUserInfo(t),q.setUserAvatar(t.avatar),C})).catch((e=>{console.log("Error: ".concat(e))}));const L=new n(o,(function(){L.saving(),g.setUserInfo(L.getInputValues()).then((e=>{q.setUserInfo(e),L.close()})).catch((e=>{console.log("Error: ".concat(e))})).finally((()=>{L.hideSaving()}))}),"save");L.setEventListeners(),new t(E,d);const q=new class{constructor(e,t,s){this._name=e,this._about=t,this._avatar=s}getUserAvatar(){return{avatar:this._avatar.src}}setUserAvatar(e){this._avatar.src=e}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}}(_,h,l);i.addEventListener("click",(()=>{A.profileform.resetValidation();const e=q.getUserInfo();p.value=e.name,m.value=e.about,L.open()}));const I=new n(a,(function(){const e=I.getInputValues();I.saving(),g.setUserAvatar(e.avatarImage).then((e=>{q.setUserAvatar(e.avatar),I.close()})).catch((e=>{console.log("Error: ".concat(e))})).finally((()=>{I.hideSaving()}))}),"save");I.setEventListeners(),u.addEventListener("click",(()=>{A.avatarform.resetValidation(),b.textContent=q.getUserAvatar(),I.open()}));const w=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>this.addItem(e)))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:t=>{const s=new e({item:t,handleCardClick:()=>{x.open({item:t})},handleDeleteButton:e=>{U.open(),U.setAction((()=>{g.deleteCard(e).then((()=>{s.deleteCard(),U.close()})).catch((e=>{console.log("Error: ".concat(e))}))}))},handleLikeButton:e=>{s.checkForLikes()?g.unlikeCard(e).then((e=>{s.handleLike(e.likes)})).catch((e=>{console.log("Error: ".concat(e))})):g.likeCard(e).then((e=>{s.handleLike(e.likes)})).catch((e=>{console.log("Error: ".concat(e))}))}},".card-template",k);return s.generateCard(C)}},".cards"),B=new n(v,(function(){B.saving();const e=B.getInputValues(),t={name:e.placeHeading,link:e.placeImage};g.createCard(t).then((e=>{w.addItem(e),B.close()})).catch((e=>{console.log("Error: ".concat(err))})).finally((()=>{B.hideSaving()}))}),"create");B.setEventListeners(),y.addEventListener("click",(()=>{A.placeform.resetValidation(),B.open()}));const U=new class extends r{constructor(e){super(e),this._form=this._popupElement.querySelector(".popup__form_type_delete")}setAction(e){this._handleSubmit=e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}}(S);U.setEventListeners();const x=new class extends r{constructor(e){super(e),this._image=this._popupElement.querySelector(".popup__image"),this._caption=this._popupElement.querySelector(".popup__heading")}open(e){let{item:t}=e;this._image.src=t.link,this._image.alt="".concat(t.name," photo"),this._caption.textContent=t.name,super.open()}}(f),A={};(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((s=>{const r=new t(e,s),n=s.getAttribute("name");A[n]=r,r.enableValidation()}))})(E)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,